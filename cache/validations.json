{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:51",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)235_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)299_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "dd0f45ebb12b27e40c59a5b7688ef67522fd9a6bdb281f0d921344f6886c776b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "9cfedfce65f9c5ba0e8402a67f4915141ead9e143ba84283e6163ef0272dd68f",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "5c5effd327968eb0a04df34a2ed8d9b9c7665687788df9d97c10bbbda357af51",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "8a7ff2ca73a633f34721a5bacf42fc10345e89a6e504dd8a895869f9ede2925b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "07d32be4a13203cbc4a47d56a1ae3e1ad764e804830eb9aae4d0b3ab53ecab60",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "7679e5b08e341b968a3319575a7c93eee7fe6586adb6e5963ff05e2299721ef4",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:68"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:54"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils": {
        "src": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:15",
        "version": {
          "withMetadata": "b269a79b58b5be357f0ab4d64ad81ced924f303293c58960e764c5437bd925d8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "5ca3cf8fa99e81ce081df3aaa19dfabf9b970c73ab0e4f8e6a36c1561d83954b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "01d07a2a88989c422fe63efd09bde53d644103dc3f5555b0bb643dcad6cf2ea9",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "aec03d6bc9aa7c8c29941b88cf0790c5578e3cb4c903ec6400baeb883e9a122f",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/GaslessPackageManager.sol:GaslessPackageManager": {
        "src": "contracts/GaslessPackageManager.sol:12",
        "version": {
          "withMetadata": "071e66fa66d0c14424b0c388515d2046ad45f4a9978e0acdeea5473a811e2b7b",
          "withoutMetadata": "071e66fa66d0c14424b0c388515d2046ad45f4a9978e0acdeea5473a811e2b7b",
          "linkedWithoutMetadata": "071e66fa66d0c14424b0c388515d2046ad45f4a9978e0acdeea5473a811e2b7b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/PackageManagerV2_2.sol:PackageManagerV2_2",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "(address,address,address,address,address,address,address,address,address,uint256)",
          "getUserNonce(address)",
          "executeGaslessPurchase(uint256,uint256,address,uint256,bytes)",
          "executeGaslessPurchaseFromForwarder(address,uint256,uint256,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GaslessPackageManager",
            "src": "contracts/GaslessPackageManager.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:51"
            },
            {
              "label": "deadlineWindow",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:52"
            },
            {
              "label": "globalTargetPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:53"
            },
            {
              "label": "slippageTolerance",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:54"
            },
            {
              "label": "liquidityBps",
              "offset": 0,
              "slot": "6",
              "type": "t_uint16",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:55"
            },
            {
              "label": "nextPackageId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:62"
            },
            {
              "label": "_packageIds",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:63"
            },
            {
              "label": "_packages",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Package)11531_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:64"
            },
            {
              "label": "_userStats",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(UserStats)11619_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:68"
            },
            {
              "label": "_userPurchases",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_struct(UserPurchase)11600_storage)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:69"
            },
            {
              "label": "_userRedemptions",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:70"
            },
            {
              "label": "_userRedemptionTimestamps",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:71"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "15",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:54"
            },
            {
              "label": "_userNonces",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GaslessPackageManager",
              "src": "contracts/GaslessPackageManager.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(UserPurchase)11600_storage)dyn_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(UserPurchase)11600_storage)dyn_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserPurchase[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStats)11619_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserStats)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)11531_storage)": {
              "label": "mapping(uint256 => struct PackageManagerV2_2.Package)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Package)11531_storage": {
              "label": "struct PackageManagerV2_2.Package",
              "members": [
                {
                  "label": "entryUSDT",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exchangeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "cliff",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "vestBps",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "referralBps",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserPurchase)11600_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase",
              "members": [
                {
                  "label": "packageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "poolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lpTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "referralReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserStats)11619_storage": {
              "label": "struct PackageManagerV2_2.UserStats",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalTokensReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalVestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalPoolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalLPTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalReferralRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "purchaseCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "redemptionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "totalRedemptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IBLOCKSUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IBLOCKS_LPUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IERC20DecimalsUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IPancakeFactoryUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IPancakePairUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReserves()",
          "token0()",
          "token1()",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IPancakeRouterUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "getAmountsOut(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:ISwapTaxManagerUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "buckets(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IVestingVaultUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lock(address,uint256,uint64,uint64)",
          "claimFor(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:PackageManagerUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:24",
        "version": {
          "withMetadata": "1b7f98453e7365a27db58844874e98b07be771b51c66d35eae37df91ad184e50",
          "withoutMetadata": "4c61325470c6bd4a5a04584a06ae6095290987b8126d5e54a62827cc0f7b1472",
          "linkedWithoutMetadata": "4c61325470c6bd4a5a04584a06ae6095290987b8126d5e54a62827cc0f7b1472"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address,address,address,uint256)",
          "addPackage(string,uint256,uint256,uint16,uint64,uint64,uint16)",
          "togglePackage(uint256)",
          "setPackageExchangeRate(uint256,uint256)",
          "setGlobalTargetPrice(uint256)",
          "getCurrentMarketPrice()",
          "getPackage(uint256)",
          "getPackageIds()",
          "getActivePackageIds()",
          "getPackageCount()",
          "getUserStats(address)",
          "getUserPurchases(address)",
          "getUserPurchaseCount(address)",
          "getUserPurchase(address,uint256)",
          "getUserRedemptions(address)",
          "getUserRedemptionCount(address)",
          "getUserPackages(address)",
          "getUserPackageCount(address)",
          "purchase(uint256,address)",
          "purchaseFor(address,uint256,address)",
          "redeem(uint256)",
          "setDeadlineWindow(uint256)",
          "setTreasury(address)",
          "setLiquidityBps(uint16)",
          "pause()",
          "unpause()",
          "setSlippageTolerance(uint256)",
          "initRouterAllowances()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "usdt",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20DecimalsUpgradeable)8677",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:33"
            },
            {
              "label": "shareToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBLOCKSUpgradeable)8685",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:34"
            },
            {
              "label": "lpToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBLOCKS_LPUpgradeable)8705",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:35"
            },
            {
              "label": "vestingVault",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IVestingVaultUpgradeable)8722",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:36"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPancakeRouterUpgradeable)8780",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:37"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPancakeFactoryUpgradeable)8790",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:38"
            },
            {
              "label": "taxManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ISwapTaxManagerUpgradeable)8825",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:39"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:40"
            },
            {
              "label": "deadlineWindow",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:41"
            },
            {
              "label": "globalTargetPrice",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:42"
            },
            {
              "label": "slippageTolerance",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:43"
            },
            {
              "label": "liquidityBps",
              "offset": 0,
              "slot": "11",
              "type": "t_uint16",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:44"
            },
            {
              "label": "USDT_DEC",
              "offset": 2,
              "slot": "11",
              "type": "t_uint8",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:46"
            },
            {
              "label": "USDT_SCALE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:47"
            },
            {
              "label": "USDT_SCALE_UP",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:48"
            },
            {
              "label": "nextPackageId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:50"
            },
            {
              "label": "_packageIds",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:51"
            },
            {
              "label": "_packages",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(Package)8868_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:52"
            },
            {
              "label": "_userStats",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(UserStats)8953_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:56"
            },
            {
              "label": "_userPurchases",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_array(t_struct(UserPurchase)8934_storage)dyn_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:57"
            },
            {
              "label": "_userRedemptions",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:58"
            },
            {
              "label": "_userRedemptionTimestamps",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)235_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)299_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_struct(UserPurchase)8934_storage)dyn_storage": {
              "label": "struct PackageManagerUpgradeable.UserPurchase[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBLOCKSUpgradeable)8685": {
              "label": "contract IBLOCKSUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IBLOCKS_LPUpgradeable)8705": {
              "label": "contract IBLOCKS_LPUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20DecimalsUpgradeable)8677": {
              "label": "contract IERC20DecimalsUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPancakeFactoryUpgradeable)8790": {
              "label": "contract IPancakeFactoryUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPancakeRouterUpgradeable)8780": {
              "label": "contract IPancakeRouterUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ISwapTaxManagerUpgradeable)8825": {
              "label": "contract ISwapTaxManagerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IVestingVaultUpgradeable)8722": {
              "label": "contract IVestingVaultUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(UserPurchase)8934_storage)dyn_storage)": {
              "label": "mapping(address => struct PackageManagerUpgradeable.UserPurchase[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStats)8953_storage)": {
              "label": "mapping(address => struct PackageManagerUpgradeable.UserStats)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)8868_storage)": {
              "label": "mapping(uint256 => struct PackageManagerUpgradeable.Package)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Package)8868_storage": {
              "label": "struct PackageManagerUpgradeable.Package",
              "members": [
                {
                  "label": "entryUSDT",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exchangeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "cliff",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "vestBps",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "referralBps",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UserPurchase)8934_storage": {
              "label": "struct PackageManagerUpgradeable.UserPurchase",
              "members": [
                {
                  "label": "packageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "poolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lpTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "referralReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserStats)8953_storage": {
              "label": "struct PackageManagerUpgradeable.UserStats",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalTokensReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalVestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalPoolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalLPTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalReferralRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "purchaseCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "redemptionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "totalRedemptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IBLOCKS": {
        "src": "contracts/PackageManagerV2_2.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IBLOCKS_LP": {
        "src": "contracts/PackageManagerV2_2.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IERC20Decimals": {
        "src": "contracts/PackageManagerV2_2.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IPancakeFactory": {
        "src": "contracts/PackageManagerV2_2.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IPancakePair": {
        "src": "contracts/PackageManagerV2_2.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReserves()",
          "token0()",
          "token1()",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IPancakeRouter": {
        "src": "contracts/PackageManagerV2_2.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "getAmountsOut(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:ISwapTaxManager": {
        "src": "contracts/PackageManagerV2_2.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "buckets(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IVestingVault": {
        "src": "contracts/PackageManagerV2_2.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lock(address,uint256,uint64,uint64)",
          "claimFor(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:PackageManagerV2_2": {
        "src": "contracts/PackageManagerV2_2.sol:23",
        "version": {
          "withMetadata": "5a3d6a2702281b7efa8012c80cacffce6b3093653bdb0c944b93d3f2056a7d4a",
          "withoutMetadata": "5a3d6a2702281b7efa8012c80cacffce6b3093653bdb0c944b93d3f2056a7d4a",
          "linkedWithoutMetadata": "5a3d6a2702281b7efa8012c80cacffce6b3093653bdb0c944b93d3f2056a7d4a"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,address,address,address,address,address,uint256)",
          "addPackage(string,uint256,uint256,uint16,uint64,uint64,uint16)",
          "togglePackage(uint256)",
          "setPackageExchangeRate(uint256,uint256)",
          "setGlobalTargetPrice(uint256)",
          "getCurrentMarketPrice()",
          "getPackage(uint256)",
          "getPackageIds()",
          "getActivePackageIds()",
          "getPackageCount()",
          "getUserStats(address)",
          "getUserPurchases(address)",
          "getUserPurchaseCount(address)",
          "getUserPurchase(address,uint256)",
          "getUserRedemptions(address)",
          "getUserRedemptionCount(address)",
          "getUserPackages(address)",
          "getUserPackageCount(address)",
          "purchase(uint256,address)",
          "purchaseFor(address,uint256,address)",
          "redeem(uint256)",
          "setDeadlineWindow(uint256)",
          "setTreasury(address)",
          "setLiquidityBps(uint16)",
          "initRouterAllowances()",
          "pause()",
          "unpause()",
          "setSlippageTolerance(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PackageManagerV2_2",
            "src": "contracts/PackageManagerV2_2.sol:94"
          },
          {
            "kind": "state-variable-immutable",
            "name": "usdt",
            "src": "contracts/PackageManagerV2_2.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "shareToken",
            "src": "contracts/PackageManagerV2_2.sol:45"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lpToken",
            "src": "contracts/PackageManagerV2_2.sol:46"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vestingVault",
            "src": "contracts/PackageManagerV2_2.sol:47"
          },
          {
            "kind": "state-variable-immutable",
            "name": "router",
            "src": "contracts/PackageManagerV2_2.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/PackageManagerV2_2.sol:49"
          },
          {
            "kind": "state-variable-immutable",
            "name": "taxManager",
            "src": "contracts/PackageManagerV2_2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadlineWindow",
            "src": "contracts/PackageManagerV2_2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "slippageTolerance",
            "src": "contracts/PackageManagerV2_2.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "liquidityBps",
            "src": "contracts/PackageManagerV2_2.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDT_DEC",
            "src": "contracts/PackageManagerV2_2.sol:58"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDT_SCALE",
            "src": "contracts/PackageManagerV2_2.sol:59"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDT_SCALE_UP",
            "src": "contracts/PackageManagerV2_2.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:51"
            },
            {
              "label": "deadlineWindow",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:52"
            },
            {
              "label": "globalTargetPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:53"
            },
            {
              "label": "slippageTolerance",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:54"
            },
            {
              "label": "liquidityBps",
              "offset": 0,
              "slot": "6",
              "type": "t_uint16",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:55"
            },
            {
              "label": "nextPackageId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:62"
            },
            {
              "label": "_packageIds",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:63"
            },
            {
              "label": "_packages",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Package)11531_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:64"
            },
            {
              "label": "_userStats",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(UserStats)11619_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:68"
            },
            {
              "label": "_userPurchases",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_struct(UserPurchase)11600_storage)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:69"
            },
            {
              "label": "_userRedemptions",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:70"
            },
            {
              "label": "_userRedemptionTimestamps",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(UserPurchase)11600_storage)dyn_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(UserPurchase)11600_storage)dyn_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserPurchase[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStats)11619_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserStats)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)11531_storage)": {
              "label": "mapping(uint256 => struct PackageManagerV2_2.Package)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Package)11531_storage": {
              "label": "struct PackageManagerV2_2.Package",
              "members": [
                {
                  "label": "entryUSDT",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exchangeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "cliff",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "vestBps",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "referralBps",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserPurchase)11600_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase",
              "members": [
                {
                  "label": "packageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "poolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lpTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "referralReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserStats)11619_storage": {
              "label": "struct PackageManagerV2_2.UserStats",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalTokensReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalVestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalPoolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalLPTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalReferralRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "purchaseCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "redemptionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "totalRedemptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:51",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)235_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)299_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "dd0f45ebb12b27e40c59a5b7688ef67522fd9a6bdb281f0d921344f6886c776b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "9cfedfce65f9c5ba0e8402a67f4915141ead9e143ba84283e6163ef0272dd68f",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "5c5effd327968eb0a04df34a2ed8d9b9c7665687788df9d97c10bbbda357af51",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "8a7ff2ca73a633f34721a5bacf42fc10345e89a6e504dd8a895869f9ede2925b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "07d32be4a13203cbc4a47d56a1ae3e1ad764e804830eb9aae4d0b3ab53ecab60",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "7679e5b08e341b968a3319575a7c93eee7fe6586adb6e5963ff05e2299721ef4",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:68"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:54"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils": {
        "src": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:15",
        "version": {
          "withMetadata": "b269a79b58b5be357f0ab4d64ad81ced924f303293c58960e764c5437bd925d8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "5ca3cf8fa99e81ce081df3aaa19dfabf9b970c73ab0e4f8e6a36c1561d83954b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "01d07a2a88989c422fe63efd09bde53d644103dc3f5555b0bb643dcad6cf2ea9",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "aec03d6bc9aa7c8c29941b88cf0790c5578e3cb4c903ec6400baeb883e9a122f",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BLOCKSStakingV2.sol:BLOCKSStakingV2": {
        "src": "contracts/BLOCKSStakingV2.sol:17",
        "version": {
          "withMetadata": "ef2ba837c98643f5f6a0c7385cf19371fb30041ab4b28c44ab36e85b5e471df0",
          "withoutMetadata": "ef2ba837c98643f5f6a0c7385cf19371fb30041ab4b28c44ab36e85b5e471df0",
          "linkedWithoutMetadata": "ef2ba837c98643f5f6a0c7385cf19371fb30041ab4b28c44ab36e85b5e471df0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address)",
          "poolCount()",
          "getUserPoolIds(address)",
          "hasActiveStake(address,uint256)",
          "getUserStake(address,uint256)",
          "getPendingRewards(address,uint256)",
          "stake(uint256,uint256)",
          "unstake(uint256,uint256)",
          "emergencyUnstake(uint256,uint256)",
          "claimRewards(uint256)",
          "claimAllRewards()",
          "getTotalPendingRewards(address)",
          "createPool(string,uint256,uint256,uint256,uint256,uint256,uint256)",
          "updatePool(uint256,uint256,uint256,bool)",
          "distributeRewards(uint256)",
          "emergencyWithdraw(address,uint256)",
          "pause()",
          "unpause()",
          "getContractStats()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BLOCKSStakingV2",
            "src": "contracts/BLOCKSStakingV2.sol:81"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stakingToken",
            "src": "contracts/BLOCKSStakingV2.sol:30"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewardToken",
            "src": "contracts/BLOCKSStakingV2.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:34"
            },
            {
              "label": "totalRewardsDistributed",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:35"
            },
            {
              "label": "globalRewardRate",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:36"
            },
            {
              "label": "stakingPools",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_struct(StakingPool)9021_storage)dyn_storage",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:62"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserStake)9034_storage))",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:63"
            },
            {
              "label": "userPoolIds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:64"
            },
            {
              "label": "totalUserStaked",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:65"
            },
            {
              "label": "poolRewardPerTokenStored",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:68"
            },
            {
              "label": "poolLastUpdateTime",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:69"
            },
            {
              "label": "userRewardPerTokenPaid",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "BLOCKSStakingV2",
              "src": "contracts/BLOCKSStakingV2.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingPool)9021_storage)dyn_storage": {
              "label": "struct BLOCKSStakingV2.StakingPool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStake)9034_storage)": {
              "label": "mapping(address => struct BLOCKSStakingV2.UserStake)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserStake)9034_storage))": {
              "label": "mapping(uint256 => mapping(address => struct BLOCKSStakingV2.UserStake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(StakingPool)9021_storage": {
              "label": "struct BLOCKSStakingV2.StakingPool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "apyBasisPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "maxStake",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalStaked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "rewardMultiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "emergencyExitPenalty",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserStake)9034_storage": {
              "label": "struct BLOCKSStakingV2.UserStake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lockEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastRewardClaim",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accumulatedRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BlockCoopV2.sol:BLOCKS": {
        "src": "contracts/BlockCoopV2.sol:22",
        "version": {
          "withMetadata": "48b2c6d88e93325e57bc526f3ab0dcbaa6d0bf54914b05fc97b7fbfd7411f7d1",
          "withoutMetadata": "56af199227850953f9ca888501bac809fb6c7f7bbfdea8e18a5f1a900c3ec53f",
          "linkedWithoutMetadata": "56af199227850953f9ca888501bac809fb6c7f7bbfdea8e18a5f1a900c3ec53f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address,address)",
          "mint(address,uint256)",
          "setAMMStatus(address,bool)",
          "setSwapTaxManager(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BLOCKS",
            "src": "contracts/BlockCoopV2.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "swapTaxManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ISwapTaxManager)10518",
              "contract": "BLOCKS",
              "src": "contracts/BlockCoopV2.sol:30"
            },
            {
              "label": "isAMM",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BLOCKS",
              "src": "contracts/BlockCoopV2.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISwapTaxManager)10518": {
              "label": "contract ISwapTaxManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BlockCoopV2.sol:BLOCKS_LP": {
        "src": "contracts/BlockCoopV2.sol:150",
        "version": {
          "withMetadata": "3dd3849560a835e79670c1e1891515e702d75e409757d57ffe0c656618e46820",
          "withoutMetadata": "d68a190585f942851ef3c4a2f8ea31590105fa71a8e598d0cab2dd0bebc967be",
          "linkedWithoutMetadata": "d68a190585f942851ef3c4a2f8ea31590105fa71a8e598d0cab2dd0bebc967be"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BLOCKS_LP",
            "src": "contracts/BlockCoopV2.sol:154"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BlockCoopV2.sol:IPancakeRouter": {
        "src": "contracts/BlockCoopV2.sol:272",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BlockCoopV2.sol:ISwapTaxManager": {
        "src": "contracts/BlockCoopV2.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "buckets(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BlockCoopV2.sol:SwapTaxManager": {
        "src": "contracts/BlockCoopV2.sol:246",
        "version": {
          "withMetadata": "f3a0dfa14f490820b053d9a55ac181070bbcc140fbfef33bc386c517f220c941",
          "withoutMetadata": "0f8003c4fb6b44b7e9d6b90a52afc8e9b70d1032510f7428e0243fbd04ee984f",
          "linkedWithoutMetadata": "0f8003c4fb6b44b7e9d6b90a52afc8e9b70d1032510f7428e0243fbd04ee984f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setBucket(bytes32,uint16,address)",
          "getTaxBucket(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapTaxManager",
            "src": "contracts/BlockCoopV2.sol:254"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "buckets",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(TaxBucket)11261_storage)",
              "contract": "SwapTaxManager",
              "src": "contracts/BlockCoopV2.sol:250"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(TaxBucket)11261_storage)": {
              "label": "mapping(bytes32 => struct SwapTaxManager.TaxBucket)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TaxBucket)11261_storage": {
              "label": "struct SwapTaxManager.TaxBucket",
              "members": [
                {
                  "label": "rateBps",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BlockCoopV2.sol:USDTTestToken": {
        "src": "contracts/BlockCoopV2.sol:291",
        "version": {
          "withMetadata": "0b90c593644fef51fe64f88910230eed69d99822f889bb925a950168d7846579",
          "withoutMetadata": "0b90c593644fef51fe64f88910230eed69d99822f889bb925a950168d7846579",
          "linkedWithoutMetadata": "0b90c593644fef51fe64f88910230eed69d99822f889bb925a950168d7846579"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "USDTTestToken",
            "src": "contracts/BlockCoopV2.sol:294"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BlockCoopV2.sol:VestingVault": {
        "src": "contracts/BlockCoopV2.sol:171",
        "version": {
          "withMetadata": "a6481c686a21b47cf36205b20a2d57c2d0a448391e7fb9c448cea207d8f5d538",
          "withoutMetadata": "86723647ba2025304159be1a1872f01c6e786b8ea40c62a8e69faa22073e67e4",
          "linkedWithoutMetadata": "86723647ba2025304159be1a1872f01c6e786b8ea40c62a8e69faa22073e67e4"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "lock(address,uint256,uint64,uint64)",
          "claim()",
          "claimFor(address)",
          "vestedAmount(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VestingVault",
            "src": "contracts/BlockCoopV2.sol:190"
          },
          {
            "kind": "state-variable-immutable",
            "name": "shareToken",
            "src": "contracts/BlockCoopV2.sol:182"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "totalLocked",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingVault",
              "src": "contracts/BlockCoopV2.sol:183"
            },
            {
              "label": "released",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingVault",
              "src": "contracts/BlockCoopV2.sol:184"
            },
            {
              "label": "userSchedule",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Schedule)10984_storage)",
              "contract": "VestingVault",
              "src": "contracts/BlockCoopV2.sol:185"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Schedule)10984_storage)": {
              "label": "mapping(address => struct VestingVault.Schedule)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Schedule)10984_storage": {
              "label": "struct VestingVault.Schedule",
              "members": [
                {
                  "label": "cliff",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "duration",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "start",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/DividendDistributor.sol:DividendDistributor": {
        "src": "contracts/DividendDistributor.sol:16",
        "version": {
          "withMetadata": "a2acd0c4c3d94f18385743b7c85cf632180e3affe0bd7bd049f2a613dffd7849",
          "withoutMetadata": "a2acd0c4c3d94f18385743b7c85cf632180e3affe0bd7bd049f2a613dffd7849",
          "linkedWithoutMetadata": "a2acd0c4c3d94f18385743b7c85cf632180e3affe0bd7bd049f2a613dffd7849"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address)",
          "distributeDividends(uint256)",
          "claimDividend()",
          "getPendingDividends(address)",
          "getDividendsWithdrawn(address)",
          "getTotalDividendsEarned(address)",
          "getDividendStats()",
          "emergencyWithdraw(address,uint256)",
          "pause()",
          "unpause()",
          "updateDividendTracker(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DividendDistributor",
            "src": "contracts/DividendDistributor.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/DividendDistributor.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "dividendToken",
            "src": "contracts/DividendDistributor.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DividendDistributor",
              "src": "contracts/DividendDistributor.sol:28"
            },
            {
              "label": "_dividendsWithdrawn",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendDistributor",
              "src": "contracts/DividendDistributor.sol:31"
            },
            {
              "label": "_lastDividendPoints",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendDistributor",
              "src": "contracts/DividendDistributor.sol:32"
            },
            {
              "label": "_totalDividendPoints",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DividendDistributor",
              "src": "contracts/DividendDistributor.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/GaslessPackageManager.sol:GaslessPackageManager": {
        "src": "contracts/GaslessPackageManager.sol:12",
        "version": {
          "withMetadata": "7f533a5ef57da3e19d0f72a1a8d6c2bf7e3c9c96a4a0f117041c49656fab3bba",
          "withoutMetadata": "7f533a5ef57da3e19d0f72a1a8d6c2bf7e3c9c96a4a0f117041c49656fab3bba",
          "linkedWithoutMetadata": "7f533a5ef57da3e19d0f72a1a8d6c2bf7e3c9c96a4a0f117041c49656fab3bba"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "contracts/PackageManagerV2_2.sol:PackageManagerV2_2",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "(address,address,address,address,address,address,address,address,address,uint256)",
          "getUserNonce(address)",
          "executeGaslessPurchase(uint256,uint256,address,uint256,bytes)",
          "executeGaslessPurchaseFromForwarder(address,uint256,uint256,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GaslessPackageManager",
            "src": "contracts/GaslessPackageManager.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:51"
            },
            {
              "label": "deadlineWindow",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:52"
            },
            {
              "label": "globalTargetPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:53"
            },
            {
              "label": "slippageTolerance",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:54"
            },
            {
              "label": "liquidityBps",
              "offset": 0,
              "slot": "6",
              "type": "t_uint16",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:55"
            },
            {
              "label": "nextPackageId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:62"
            },
            {
              "label": "_packageIds",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:63"
            },
            {
              "label": "_packages",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Package)15676_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:64"
            },
            {
              "label": "_userStats",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(UserStats)15764_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:68"
            },
            {
              "label": "_userPurchases",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_struct(UserPurchase)15745_storage)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:69"
            },
            {
              "label": "_userRedemptions",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:70"
            },
            {
              "label": "_userRedemptionTimestamps",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:71"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "15",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:54"
            },
            {
              "label": "_userNonces",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GaslessPackageManager",
              "src": "contracts/GaslessPackageManager.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(UserPurchase)15745_storage)dyn_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(UserPurchase)15745_storage)dyn_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserPurchase[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStats)15764_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserStats)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)15676_storage)": {
              "label": "mapping(uint256 => struct PackageManagerV2_2.Package)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Package)15676_storage": {
              "label": "struct PackageManagerV2_2.Package",
              "members": [
                {
                  "label": "entryUSDT",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exchangeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "cliff",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "vestBps",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "referralBps",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserPurchase)15745_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase",
              "members": [
                {
                  "label": "packageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "poolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lpTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "referralReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserStats)15764_storage": {
              "label": "struct PackageManagerV2_2.UserStats",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalTokensReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalVestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalPoolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalLPTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalReferralRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "purchaseCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "redemptionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "totalRedemptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MinimalForwarder.sol:MinimalForwarder": {
        "src": "contracts/MinimalForwarder.sol:11",
        "version": {
          "withMetadata": "6b296a9f82aa0c46c136716a16db37737b476602c4781148b522f4af48fd1600",
          "withoutMetadata": "888ffa6b3a5f353bcf86ed8d75d7552e0c3bc872d212684cee3155f390d17323",
          "linkedWithoutMetadata": "888ffa6b3a5f353bcf86ed8d75d7552e0c3bc872d212684cee3155f390d17323"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "getNonce(address)",
          "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes)",
          "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes)",
          "executeBatch(struct MinimalForwarder.ForwardRequest[],bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MinimalForwarder",
            "src": "contracts/MinimalForwarder.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:54"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MinimalForwarder",
              "src": "contracts/MinimalForwarder.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MockTether.sol:BlockCoopMockUSDT": {
        "src": "contracts/MockTether.sol:5",
        "version": {
          "withMetadata": "4a9188f42f940419594288042752b462153ad04e10dd84448438ebf8f75d3209",
          "withoutMetadata": "1b620da7cc81dbb0106151eaab5e67e2eb1beb1e0091ff8457f1391e19f655aa",
          "linkedWithoutMetadata": "1b620da7cc81dbb0106151eaab5e67e2eb1beb1e0091ff8457f1391e19f655aa"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BlockCoopMockUSDT",
            "src": "contracts/MockTether.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BlockCoopMockUSDT",
              "src": "contracts/MockTether.sol:9"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BlockCoopMockUSDT",
              "src": "contracts/MockTether.sol:11"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BlockCoopMockUSDT",
              "src": "contracts/MockTether.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IBLOCKSUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IBLOCKS_LPUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IERC20DecimalsUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IPancakeFactoryUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IPancakePairUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReserves()",
          "token0()",
          "token1()",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IPancakeRouterUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "getAmountsOut(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:ISwapTaxManagerUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "buckets(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:IVestingVaultUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lock(address,uint256,uint64,uint64)",
          "claimFor(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerUpgradeable.sol:PackageManagerUpgradeable": {
        "src": "contracts/PackageManagerUpgradeable.sol:24",
        "version": {
          "withMetadata": "b75127e847fa2bd4ebb4f31add782d9caf0388fe51c14378c3561fe07de1b495",
          "withoutMetadata": "24cc27a04f15df2c829a561795180578962d1187ec584b7721f7f4953792d7fc",
          "linkedWithoutMetadata": "24cc27a04f15df2c829a561795180578962d1187ec584b7721f7f4953792d7fc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,address,address,address,address,address,address,address,uint256)",
          "addPackage(string,uint256,uint256,uint16,uint64,uint64,uint16)",
          "togglePackage(uint256)",
          "setPackageExchangeRate(uint256,uint256)",
          "setGlobalTargetPrice(uint256)",
          "getCurrentMarketPrice()",
          "getPackage(uint256)",
          "getPackageIds()",
          "getActivePackageIds()",
          "getPackageCount()",
          "getUserStats(address)",
          "getUserPurchases(address)",
          "getUserPurchaseCount(address)",
          "getUserPurchase(address,uint256)",
          "getUserRedemptions(address)",
          "getUserRedemptionCount(address)",
          "getUserPackages(address)",
          "getUserPackageCount(address)",
          "purchase(uint256,address)",
          "purchaseFor(address,uint256,address)",
          "redeem(uint256)",
          "setDeadlineWindow(uint256)",
          "setTreasury(address)",
          "setLiquidityBps(uint16)",
          "pause()",
          "unpause()",
          "setSlippageTolerance(uint256)",
          "initRouterAllowances()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "usdt",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20DecimalsUpgradeable)12822",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:33"
            },
            {
              "label": "shareToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBLOCKSUpgradeable)12830",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:34"
            },
            {
              "label": "lpToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBLOCKS_LPUpgradeable)12850",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:35"
            },
            {
              "label": "vestingVault",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IVestingVaultUpgradeable)12867",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:36"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPancakeRouterUpgradeable)12925",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:37"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPancakeFactoryUpgradeable)12935",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:38"
            },
            {
              "label": "taxManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ISwapTaxManagerUpgradeable)12970",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:39"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:40"
            },
            {
              "label": "deadlineWindow",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:41"
            },
            {
              "label": "globalTargetPrice",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:42"
            },
            {
              "label": "slippageTolerance",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:43"
            },
            {
              "label": "liquidityBps",
              "offset": 0,
              "slot": "11",
              "type": "t_uint16",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:44"
            },
            {
              "label": "USDT_DEC",
              "offset": 2,
              "slot": "11",
              "type": "t_uint8",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:46"
            },
            {
              "label": "USDT_SCALE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:47"
            },
            {
              "label": "USDT_SCALE_UP",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:48"
            },
            {
              "label": "nextPackageId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:50"
            },
            {
              "label": "_packageIds",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:51"
            },
            {
              "label": "_packages",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(Package)13013_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:52"
            },
            {
              "label": "_userStats",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(UserStats)13098_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:56"
            },
            {
              "label": "_userPurchases",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_array(t_struct(UserPurchase)13079_storage)dyn_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:57"
            },
            {
              "label": "_userRedemptions",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:58"
            },
            {
              "label": "_userRedemptionTimestamps",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerUpgradeable",
              "src": "contracts/PackageManagerUpgradeable.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)36_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)147_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)235_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)299_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)26_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_struct(UserPurchase)13079_storage)dyn_storage": {
              "label": "struct PackageManagerUpgradeable.UserPurchase[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBLOCKSUpgradeable)12830": {
              "label": "contract IBLOCKSUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IBLOCKS_LPUpgradeable)12850": {
              "label": "contract IBLOCKS_LPUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20DecimalsUpgradeable)12822": {
              "label": "contract IERC20DecimalsUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPancakeFactoryUpgradeable)12935": {
              "label": "contract IPancakeFactoryUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPancakeRouterUpgradeable)12925": {
              "label": "contract IPancakeRouterUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ISwapTaxManagerUpgradeable)12970": {
              "label": "contract ISwapTaxManagerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IVestingVaultUpgradeable)12867": {
              "label": "contract IVestingVaultUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(UserPurchase)13079_storage)dyn_storage)": {
              "label": "mapping(address => struct PackageManagerUpgradeable.UserPurchase[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStats)13098_storage)": {
              "label": "mapping(address => struct PackageManagerUpgradeable.UserStats)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)13013_storage)": {
              "label": "mapping(uint256 => struct PackageManagerUpgradeable.Package)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Package)13013_storage": {
              "label": "struct PackageManagerUpgradeable.Package",
              "members": [
                {
                  "label": "entryUSDT",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exchangeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "cliff",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "vestBps",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "referralBps",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UserPurchase)13079_storage": {
              "label": "struct PackageManagerUpgradeable.UserPurchase",
              "members": [
                {
                  "label": "packageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "poolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lpTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "referralReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserStats)13098_storage": {
              "label": "struct PackageManagerUpgradeable.UserStats",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalTokensReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalVestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalPoolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalLPTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalReferralRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "purchaseCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "redemptionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "totalRedemptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IBLOCKS": {
        "src": "contracts/PackageManagerV2_2.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IBLOCKS_LP": {
        "src": "contracts/PackageManagerV2_2.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IERC20Decimals": {
        "src": "contracts/PackageManagerV2_2.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IPancakeFactory": {
        "src": "contracts/PackageManagerV2_2.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IPancakePair": {
        "src": "contracts/PackageManagerV2_2.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReserves()",
          "token0()",
          "token1()",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IPancakeRouter": {
        "src": "contracts/PackageManagerV2_2.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "getAmountsOut(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:ISwapTaxManager": {
        "src": "contracts/PackageManagerV2_2.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "buckets(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:IVestingVault": {
        "src": "contracts/PackageManagerV2_2.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lock(address,uint256,uint64,uint64)",
          "claimFor(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PackageManagerV2_2.sol:PackageManagerV2_2": {
        "src": "contracts/PackageManagerV2_2.sol:23",
        "version": {
          "withMetadata": "83095e7d1e64b13a1cc99472dff4de21833d83bbfbfe5247c26ac3029769dcf1",
          "withoutMetadata": "83095e7d1e64b13a1cc99472dff4de21833d83bbfbfe5247c26ac3029769dcf1",
          "linkedWithoutMetadata": "83095e7d1e64b13a1cc99472dff4de21833d83bbfbfe5247c26ac3029769dcf1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,address,address,address,address,address,uint256)",
          "addPackage(string,uint256,uint256,uint16,uint64,uint64,uint16)",
          "togglePackage(uint256)",
          "setPackageExchangeRate(uint256,uint256)",
          "setGlobalTargetPrice(uint256)",
          "getCurrentMarketPrice()",
          "getPackage(uint256)",
          "getPackageIds()",
          "getActivePackageIds()",
          "getPackageCount()",
          "getUserStats(address)",
          "getUserPurchases(address)",
          "getUserPurchaseCount(address)",
          "getUserPurchase(address,uint256)",
          "getUserRedemptions(address)",
          "getUserRedemptionCount(address)",
          "getUserPackages(address)",
          "getUserPackageCount(address)",
          "purchase(uint256,address)",
          "purchaseFor(address,uint256,address)",
          "redeem(uint256)",
          "setDeadlineWindow(uint256)",
          "setTreasury(address)",
          "setLiquidityBps(uint16)",
          "initRouterAllowances()",
          "pause()",
          "unpause()",
          "setSlippageTolerance(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PackageManagerV2_2",
            "src": "contracts/PackageManagerV2_2.sol:94"
          },
          {
            "kind": "state-variable-immutable",
            "name": "usdt",
            "src": "contracts/PackageManagerV2_2.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "shareToken",
            "src": "contracts/PackageManagerV2_2.sol:45"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lpToken",
            "src": "contracts/PackageManagerV2_2.sol:46"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vestingVault",
            "src": "contracts/PackageManagerV2_2.sol:47"
          },
          {
            "kind": "state-variable-immutable",
            "name": "router",
            "src": "contracts/PackageManagerV2_2.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/PackageManagerV2_2.sol:49"
          },
          {
            "kind": "state-variable-immutable",
            "name": "taxManager",
            "src": "contracts/PackageManagerV2_2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadlineWindow",
            "src": "contracts/PackageManagerV2_2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "slippageTolerance",
            "src": "contracts/PackageManagerV2_2.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "liquidityBps",
            "src": "contracts/PackageManagerV2_2.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDT_DEC",
            "src": "contracts/PackageManagerV2_2.sol:58"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDT_SCALE",
            "src": "contracts/PackageManagerV2_2.sol:59"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDT_SCALE_UP",
            "src": "contracts/PackageManagerV2_2.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:51"
            },
            {
              "label": "deadlineWindow",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:52"
            },
            {
              "label": "globalTargetPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:53"
            },
            {
              "label": "slippageTolerance",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:54"
            },
            {
              "label": "liquidityBps",
              "offset": 0,
              "slot": "6",
              "type": "t_uint16",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:55"
            },
            {
              "label": "nextPackageId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:62"
            },
            {
              "label": "_packageIds",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:63"
            },
            {
              "label": "_packages",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Package)15676_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:64"
            },
            {
              "label": "_userStats",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(UserStats)15764_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:68"
            },
            {
              "label": "_userPurchases",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_array(t_struct(UserPurchase)15745_storage)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:69"
            },
            {
              "label": "_userRedemptions",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:70"
            },
            {
              "label": "_userRedemptionTimestamps",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "PackageManagerV2_2",
              "src": "contracts/PackageManagerV2_2.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(UserPurchase)15745_storage)dyn_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(UserPurchase)15745_storage)dyn_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserPurchase[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStats)15764_storage)": {
              "label": "mapping(address => struct PackageManagerV2_2.UserStats)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)15676_storage)": {
              "label": "mapping(uint256 => struct PackageManagerV2_2.Package)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Package)15676_storage": {
              "label": "struct PackageManagerV2_2.Package",
              "members": [
                {
                  "label": "entryUSDT",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exchangeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "cliff",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "vestBps",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "referralBps",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserPurchase)15745_storage": {
              "label": "struct PackageManagerV2_2.UserPurchase",
              "members": [
                {
                  "label": "packageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "poolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lpTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "referralReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserStats)15764_storage": {
              "label": "struct PackageManagerV2_2.UserStats",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalTokensReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalVestTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalPoolTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalLPTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalReferralRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "purchaseCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "redemptionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "totalRedemptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SecondaryMarket.sol:IPancakeFactory": {
        "src": "contracts/SecondaryMarket.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SecondaryMarket.sol:IPancakeRouter": {
        "src": "contracts/SecondaryMarket.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "getAmountsOut(uint256,address[])",
          "factory()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SecondaryMarket.sol:SecondaryMarket": {
        "src": "contracts/SecondaryMarket.sol:35",
        "version": {
          "withMetadata": "9fa6a3f141fa8ccf931bc19c3116f60728259fbe47f38546097bae1a03c727d9",
          "withoutMetadata": "9fa6a3f141fa8ccf931bc19c3116f60728259fbe47f38546097bae1a03c727d9",
          "linkedWithoutMetadata": "9fa6a3f141fa8ccf931bc19c3116f60728259fbe47f38546097bae1a03c727d9"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,address,address,uint256)",
          "swapUSDTForBLOCKS(uint256,uint256)",
          "swapBLOCKSForUSDT(uint256,uint256)",
          "getSwapQuote(uint256)",
          "updateTargetPrice(uint256)",
          "updateSwapFee(uint256)",
          "updateFeeRecipient(address)",
          "pause()",
          "unpause()",
          "emergencyWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SecondaryMarket",
            "src": "contracts/SecondaryMarket.sol:79"
          },
          {
            "kind": "state-variable-immutable",
            "name": "usdtToken",
            "src": "contracts/SecondaryMarket.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/SecondaryMarket.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "router",
            "src": "contracts/SecondaryMarket.sol:46"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/SecondaryMarket.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "feeRecipient",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "SecondaryMarket",
              "src": "contracts/SecondaryMarket.sol:50"
            },
            {
              "label": "targetPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SecondaryMarket",
              "src": "contracts/SecondaryMarket.sol:51"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SecondaryMarket",
              "src": "contracts/SecondaryMarket.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1030_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1030_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}